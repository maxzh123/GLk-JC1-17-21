import java.util.Scanner;

/* Задание:
1. запустить убедится, что работает.
2. разобраться как работает.
3. Челенж. Переделываем, так что количество вечислений остатка от деления было как можно меньше. Посмотрим у кого что получится.
* */
public class Sample6 {//Сообщаем компилятору что Это класс и мы дали ему имя Sample6
    private static int count=0;
    /* Это зарезервированное имя. функция класса с таким именем и параметрами, может быть вызвана из вне JVM, т.е являться точкой входа
    * */
    public static void main (String[] arg){ //Сообщаем компилятору что класс имеет публичный метод, не возвращающий рельтатов, но принимающий в качестве аргументов масив строк.
        Scanner number = new Scanner(System.in); //делаем так, чтобы пользователь сам мог определить диапазон
        System.out.println("Введите число до которого вы хотите осуществлять поиск ");
        int enteredNumber = number.nextInt();
        for (int i=1;i<=enteredNumber;i++){//для цулочисленного i установить значение 0;выполнять блок пока i меньше 100; после каждого исполнения увеличить i на 1
            if (isPrime(i)){// Вызываем функцию которая проверит является ли число простым если да - выводим его
                System.out.println(i);//Достаем системный поток out и вызываем его метод println (напечатать и перевести строку). В качестве аргумента передаем то, что хотим напечатать.
            }//блока иначе нет. эта ситуация будет проигнорирована. никаких действий не выполнится.
        }
        System.out.println("Произвели сравнений остатка от деления:"+count);//Достаем системный поток out и вызываем его метод println (напечатать и перевести строку). В качестве аргумента передаем то, что хотим напечатать.
    }

    private static boolean isPrime(int number){
        if (number==0 || number==1 || number==2|| number==3) { //Если число которое нам передали одно из 0 1 2 3
            return true;//возвращаем да
        }
        else if (number%2==0) { //так мы уберем все четные числа
            return false;
        }else {//иначе
            int l = (int) Math.sqrt(number); // Воспользовались приведением (так как иначе получится double и будет ошибка), так как будет int, то будет округлять в мен. ст.
            for(int i=3;i<=l;i+=2){//проверяем до корня вкл-но и указываем с 3, четные тоже тут уберем
                count++;
                if (number%i==0){//проверяем делится ли number на i. если делится нацело
                    return false;//возвращаем нет.
                }
            }
        }
        return true;//Если мы попали сюда -число точно простое.
    }
}
// читал еще про решето Эратосфена, понял идею, но описать через java пока не получилось, нужно больше про массивы почитать, а брать чужой, я не хочу, так как это отличная практика )))